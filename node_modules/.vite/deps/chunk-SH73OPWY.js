import {
  convertToUnit,
  genericComponent,
  propsFactory,
  provideDefaults
} from "./chunk-OM7TGUX6.js";
import {
  computed2 as computed,
  toRefs
} from "./chunk-DY2LVASV.js";

// node_modules/vuetify/lib/components/VDefaultsProvider/VDefaultsProvider.mjs
var makeDefaultsProviderProps = propsFactory({
  defaults: Object,
  disabled: Boolean,
  reset: [Number, String],
  root: Boolean,
  scoped: Boolean
}, "v-defaults-provider");
var VDefaultsProvider = genericComponent(false)({
  name: "VDefaultsProvider",
  props: makeDefaultsProviderProps(),
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const {
      defaults,
      disabled,
      reset,
      root,
      scoped
    } = toRefs(props);
    provideDefaults(defaults, {
      reset,
      root,
      scoped,
      disabled
    });
    return () => {
      var _a;
      return (_a = slots.default) == null ? void 0 : _a.call(slots);
    };
  }
});

// node_modules/vuetify/lib/composables/dimensions.mjs
var makeDimensionProps = propsFactory({
  height: [Number, String],
  maxHeight: [Number, String],
  maxWidth: [Number, String],
  minHeight: [Number, String],
  minWidth: [Number, String],
  width: [Number, String]
}, "dimension");
function useDimension(props) {
  const dimensionStyles = computed(() => ({
    height: convertToUnit(props.height),
    maxHeight: convertToUnit(props.maxHeight),
    maxWidth: convertToUnit(props.maxWidth),
    minHeight: convertToUnit(props.minHeight),
    minWidth: convertToUnit(props.minWidth),
    width: convertToUnit(props.width)
  }));
  return {
    dimensionStyles
  };
}

export {
  VDefaultsProvider,
  makeDimensionProps,
  useDimension
};
//# sourceMappingURL=chunk-SH73OPWY.js.map
